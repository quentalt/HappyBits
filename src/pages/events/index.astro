---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import { format } from 'date-fns';

// Convertir l'URL en objet URL
const url = new URL(Astro.request.url);

// Récupérer les paramètres de tri depuis l'URL
const sortKey = 'date'; // On trie toujours par "date"
const sortOrder = url.searchParams.get('order') === 'asc'; // Ascendant si "order=asc"

const { data: events, error } = await supabase
    .from('events')
    .select('*')
    .order(sortKey, { ascending: sortOrder} );

if (error) {
    console.error('Erreur Supabase:', error);
}

// Définir l'URL pour inverser l'ordre de tri
const nextOrder = sortOrder ? 'desc' : 'asc';
const nextOrderIcon = sortOrder ? '↓' : '↑'; // Icône à afficher

---

<Layout title="Events">
    <div class="max-w-7xl mx-auto">
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-4xl font-bold text-black dark:text-white">Upcoming Events</h1>
            <div class="flex gap-4">
                <a
                        href={`?order=${nextOrder}`}
                        class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-100 dark:bg-zinc-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-zinc-700 transition-colors"
                >
                    <span>Trier</span> <span>{nextOrderIcon}</span>
                </a>
            </div>
        </div>
        <div class="grid gap-8" id="events-grid">
            {events?.map((event) => (
                    <div class="bg-white dark:bg-zinc-900 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow">
                        <div class="md:flex">
                            <div class="md:w-1/3">
                                <img
                                        src={event.image || 'https://images.unsplash.com/photo-1574169208507-84376144848b?auto=format&fit=crop&q=80'}
                                        alt={event.name}
                                        class="w-full h-64 md:h-full object-cover"
                                />
                            </div>
                            <div class="p-6 md:w-2/3">
                                <div class="flex items-center gap-4 mb-4">
                <span class="bg-purple-600 text-white px-3 py-1 rounded-full text-sm">
                  {event.category}
                </span>
                                    <time datetime={event.date} class="text-gray-500 dark:text-gray-400">
                                        {format(new Date(event.date), 'MMMM dd, yyyy')}
                                    </time>
                                </div>
                                <h2 class="text-2xl font-bold mb-4 text-black dark:text-white">{event.name}</h2>
                                <p class="text-gray-600 dark:text-gray-300 mb-4">{event.location}</p>
                                <p class="text-gray-500 dark:text-gray-400 mb-6">{event.description}</p>
                                <a
                                        href={`/events/${event.id}`}
                                        class="inline-block px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
                                >
                                    Event Details
                                </a>
                            </div>
                        </div>
                    </div>
            ))}
        </div>
    </div>
</Layout>